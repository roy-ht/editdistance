name: CI_CD

on: push

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up QEMU
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v1
        with:
          platforms: all

      - name: Build wheels
        uses: joerick/cibuildwheel@v2.11.4
        with:
          output-dir: wheelhouse
        # to supply options, put them in 'env', like:
        env:
          CIBW_SKIP: "{cp27-*}"
          CIBW_TEST_REQUIRES: pytest
          CIBW_TEST_COMMAND: "pytest {project}/test"
          CIBW_ARCHS_MACOS: "x86_64 universal2 arm64"
          CIBW_ARCHS_LINUX: "auto aarch64"

      - name: Show built files
        shell: bash
        run: ls -la wheelhouse

      - uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: ./wheelhouse/*.whl

  deploy:
    name: Uploading to PyPi
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
    needs: [build_wheels]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: 3.9
      - name: setup build
        run: pip install build
      - name: Build sdist
        run: python -m build --sdist .

      - name: Download wheels
        uses: actions/download-artifact@v3
        with:
          name: wheels
          path: dist

      - name: Show files to upload
        shell: bash
        run: ls -la dist

      - name: Publish package
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN  }}
